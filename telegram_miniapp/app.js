// Telegram WebApp API
let tg = null;
let currentRole = null;
let musicEnabled = false;
let backgroundMusic = null;
let currentTheme = 'light';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
if (window.Telegram?.WebApp) {
    tg = window.Telegram.WebApp;
    tg.ready();
    tg.expand();

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É –∏–∑ Telegram
    if (tg.themeParams.bg_color) {
        document.documentElement.style.setProperty('--tg-bg-color', tg.themeParams.bg_color);
    }

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
    tg.BackButton.onClick(() => {
        if (currentRole) {
            selectRole(null);
            tg.BackButton.hide();
        } else {
            tg.close();
        }
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
document.addEventListener('DOMContentLoaded', function() {
    initializeApp();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function initializeApp() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø–ª–µ–µ—Ä
    backgroundMusic = document.getElementById('backgroundMusic');
    if (backgroundMusic) {
        backgroundMusic.volume = 0.3; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –º—É–∑—ã–∫–∏
        backgroundMusic.addEventListener('error', function() {
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ–Ω–æ–≤—É—é –º—É–∑—ã–∫—É');
            showNotification('–§–æ–Ω–æ–≤–∞—è –º—É–∑—ã–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞', 'warning');
        });

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        document.addEventListener('click', function enableAudio() {
            if (musicEnabled && backgroundMusic.paused) {
                backgroundMusic.play().catch(e => console.log('–ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ'));
            }
            document.removeEventListener('click', enableAudio);
        });
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    loadSettings();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    initializeInterface();

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    setTimeout(() => {
        showNotification('üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ï–ì–≠ Pro!');
    }, 1000);
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ localStorage
function loadSettings() {
    const savedTheme = localStorage.getItem('theme') || 'light';
    const savedMusicState = localStorage.getItem('musicEnabled') === 'true';
    const savedRole = localStorage.getItem('currentRole');

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
    setTheme(savedTheme);

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º—É–∑—ã–∫–∏
    if (savedMusicState) {
        enableMusic();
    }

    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–æ–ª—å –µ—Å–ª–∏ –±—ã–ª–∞ –≤—ã–±—Ä–∞–Ω–∞
    if (savedRole) {
        selectRole(savedRole);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ localStorage
function saveSettings() {
    localStorage.setItem('theme', currentTheme);
    localStorage.setItem('musicEnabled', musicEnabled.toString());
    localStorage.setItem('currentRole', currentRole || '');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function initializeInterface() {
    // –ê–Ω–∏–º–∞—Ü–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    setTimeout(() => {
        const cards = document.querySelectorAll('.role-preview');
        cards.forEach((card, index) => {
            card.style.animationDelay = `${index * 0.2}s`;
            card.classList.add('fade-in-up');
        });
    }, 500);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
    const userAvatar = document.querySelector('.user-avatar');
    if (userAvatar) {
        userAvatar.addEventListener('click', toggleSidebar);
    }

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ—ë
    document.addEventListener('click', function(e) {
        const sidebar = document.getElementById('sidebar');
        const userAvatar = document.querySelector('.user-avatar');

        if (sidebar && sidebar.classList.contains('active')) {
            if (!sidebar.contains(e.target) && !userAvatar.contains(e.target)) {
                toggleSidebar();
            }
        }
    });
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã
function toggleTheme() {
    const newTheme = currentTheme === 'light' ? 'dark' : 'light';
    setTheme(newTheme);
    saveSettings();
    showNotification(`–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ ${newTheme === 'dark' ? '—Ç—ë–º–Ω—É—é' : '—Å–≤–µ—Ç–ª—É—é'}!`);
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ç–µ–º—ã
function setTheme(theme) {
    currentTheme = theme;
    document.body.setAttribute('data-theme', theme);

    const themeIcon = document.querySelector('.theme-icon');
    if (themeIcon) {
        themeIcon.textContent = theme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
    }

    // –°–æ–æ–±—â–∞–µ–º Telegram –æ —Å–º–µ–Ω–µ —Ç–µ–º—ã
    if (tg) {
        tg.setHeaderColor(theme === 'dark' ? '#1a1a1a' : '#4ecdc4');
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –º—É–∑—ã–∫–∏
function toggleMusic() {
    if (musicEnabled) {
        disableMusic();
        showNotification('üîá –ú—É–∑—ã–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞');
    } else {
        enableMusic();
        showNotification('üéµ –ú—É–∑—ã–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞');
    }
    saveSettings();
}

// –í–∫–ª—é—á–µ–Ω–∏–µ –º—É–∑—ã–∫–∏
function enableMusic() {
    musicEnabled = true;
    const musicIcon = document.getElementById('musicIcon');
    if (musicIcon) {
        musicIcon.textContent = 'üéµ';
    }

    if (backgroundMusic && backgroundMusic.paused) {
        backgroundMusic.play().catch(e => {
            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –º—É–∑—ã–∫—É:', e);
            showNotification('–í–∫–ª—é—á–∏—Ç–µ –∑–≤—É–∫ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –º—É–∑—ã–∫–∏', 'warning');
        });
    }
}

// –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –º—É–∑—ã–∫–∏
function disableMusic() {
    musicEnabled = false;
    const musicIcon = document.getElementById('musicIcon');
    if (musicIcon) {
        musicIcon.textContent = 'üîá';
    }

    if (backgroundMusic && !backgroundMusic.paused) {
        backgroundMusic.pause();
    }
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≥—Ä–æ–º–∫–æ—Å—Ç–∏
function setVolume(value) {
    if (backgroundMusic) {
        backgroundMusic.volume = parseFloat(value);
        localStorage.setItem('musicVolume', value);
    }
}

// –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –±–æ–∫–æ–≤–æ–π –ø–∞–Ω–µ–ª–∏
function toggleSidebar() {
    const sidebar = document.getElementById('sidebar');
    const mainContent = document.getElementById('mainContent');

    if (sidebar) {
        sidebar.classList.toggle('active');
        if (mainContent) {
            mainContent.classList.toggle('sidebar-active');
        }
    }
}

// –ü–æ–∫–∞–∑ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function showUserMenu() {
    toggleSidebar();
}

// –í—ã–±–æ—Ä —Ä–æ–ª–∏
function selectRole(role) {
    // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã
    const interfaces = document.querySelectorAll('.role-interface');
    interfaces.forEach(iface => {
        iface.style.display = 'none';
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ sidebar
    const roleItems = document.querySelectorAll('.role-item');
    roleItems.forEach(item => {
        item.classList.remove('active');
        if (item.dataset.role === role) {
            item.classList.add('active');
        }
    });

    currentRole = role;

    if (role) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        const targetInterface = document.getElementById(`${role}-interface`);
        if (targetInterface) {
            targetInterface.style.display = 'block';
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ Telegram
        if (tg) {
            tg.BackButton.show();
            tg.sendData(JSON.stringify({
                action: 'role_selected',
                role: role
            }));
        }

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
        const sidebar = document.getElementById('sidebar');
        const mainContent = document.getElementById('mainContent');
        if (sidebar && sidebar.classList.contains('active')) {
            sidebar.classList.remove('active');
            if (mainContent) {
                mainContent.classList.remove('sidebar-active');
            }
        }

        showNotification(`üéØ –í—ã–±—Ä–∞–Ω–∞ —Ä–æ–ª—å: ${getRoleName(role)}`);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—É—é –¥–ª—è —Ä–æ–ª–∏ –ª–æ–≥–∏–∫—É
        initializeRoleSpecificFeatures(role);
    } else {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        const defaultInterface = document.getElementById('default-interface');
        if (defaultInterface) {
            defaultInterface.style.display = 'block';
        }

        // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥" –≤ Telegram
        if (tg) {
            tg.BackButton.hide();
        }
    }

    saveSettings();
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Ä–æ–ª–∏
function getRoleName(role) {
    const roleNames = {
        'student': '–£—á–µ–Ω–∏–∫',
        'teacher': '–†–µ–ø–µ—Ç–∏—Ç–æ—Ä',
        'admin': '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
        'psychologist': '–ü—Å–∏—Ö–æ–ª–æ–≥'
    };
    return roleNames[role] || role;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Ä–æ–ª–∏
function initializeRoleSpecificFeatures(role) {
    switch (role) {
        case 'student':
            initializeStudentFeatures();
            break;
        case 'teacher':
            initializeTeacherFeatures();
            break;
        case 'admin':
            initializeAdminFeatures();
            break;
        case 'psychologist':
            initializePsychologistFeatures();
            break;
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É—á–µ–Ω–∏–∫–∞
function initializeStudentFeatures() {
    // –ê–Ω–∏–º–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
    animateProgressStats();
}

function openStudentFeature(feature) {
    const featureNames = {
        'tasks': '–ó–∞–¥–∞–Ω–∏—è –ï–ì–≠',
        'theory': '–¢–µ–æ—Ä–∏—è',
        'tests': '–¢–µ—Å—Ç—ã',
        'games': '–ò–≥—Ä—ã'
    };

    showNotification(`üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º: ${featureNames[feature]}`);

    if (tg) {
        tg.sendData(JSON.stringify({
            action: 'open_student_feature',
            feature: feature
        }));
    }

    // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    setTimeout(() => {
        showNotification(`‚úÖ ${featureNames[feature]} –∑–∞–≥—Ä—É–∂–µ–Ω!`);
    }, 1500);
}

// –ò–≥—Ä–∞ "–≠—Ä—É–¥–∏—Ç"
function playEruditGame() {
    const modal = document.getElementById('gameModal');
    if (modal) {
        modal.style.display = 'flex';
        initializeGameBoard();
        showNotification('üéÆ –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏–≥—Ä–∞ "–≠—Ä—É–¥–∏—Ç"...');
    }
}

function initializeGameBoard() {
    const gameBoard = document.getElementById('gameBoard');
    if (gameBoard) {
        gameBoard.innerHTML = `
            <div style="text-align: center; color: var(--text-secondary);">
                <div style="font-size: 3rem; margin-bottom: 1rem;">üéØ</div>
                <h3>–ò–≥—Ä–∞ "–≠—Ä—É–¥–∏—Ç"</h3>
                <p>–°–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ —Å–ª–æ–≤–∞ –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –±—É–∫–≤!</p>
                <div style="margin-top: 1rem; font-size: 1.5rem; letter-spacing: 0.5rem;">
                    –ê –õ –ì –û –† –ò –¢ –ú
                </div>
                <p style="margin-top: 1rem; font-size: 0.9rem;">
                    –ù–∞–π–¥–∏—Ç–µ –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ª–æ–≤–∞ –∏–∑ —ç—Ç–∏—Ö –±—É–∫–≤
                </p>
            </div>
        `;
    }
}

function startGame() {
    showNotification('üéØ –ò–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å! –£–¥–∞—á–∏!');
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –∏–≥—Ä—ã
    let gameTime = 60;
    const gameTimeElement = document.getElementById('gameTime');
    const gameScoreElement = document.getElementById('gameScore');

    if (gameScoreElement) gameScoreElement.textContent = '0';

    const timer = setInterval(() => {
        gameTime--;
        if (gameTimeElement) gameTimeElement.textContent = gameTime;

        if (gameTime <= 0) {
            clearInterval(timer);
            showNotification('‚è∞ –í—Ä–µ–º—è –≤—ã—à–ª–æ! –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞.');
        }
    }, 1000);
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞
function initializeTeacherFeatures() {
    // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —É—á–µ–Ω–∏–∫–æ–≤
    loadTeacherDashboard();
}

function loadTeacherDashboard() {
    // –ê–Ω–∏–º–∞—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    animateStats('.teacher-interface .stat-number');
}

function openTeacherFeature(feature) {
    const featureNames = {
        'create-tasks': '–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞–Ω–∏–π',
        'students': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–µ–Ω–∏–∫–∞–º–∏',
        'analytics': '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
        'materials': '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã'
    };

    showNotification(`üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º: ${featureNames[feature]}`);

    if (tg) {
        tg.sendData(JSON.stringify({
            action: 'open_teacher_feature',
            feature: feature
        }));
    }
}

function createQuickTask() {
    showNotification('‚úèÔ∏è –°–æ–∑–¥–∞—ë–º –±—ã—Å—Ç—Ä–æ–µ –∑–∞–¥–∞–Ω–∏–µ...');

    setTimeout(() => {
        showNotification('‚úÖ –ó–∞–¥–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—á–µ–Ω–∏–∫–∞–º!');
    }, 2000);
}

function checkSubmissions() {
    showNotification('üìù –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—ã —É—á–µ–Ω–∏–∫–æ–≤...');

    setTimeout(() => {
        showNotification('üìä –ù–∞–π–¥–µ–Ω–æ 12 —Ä–∞–±–æ—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏');
    }, 1500);
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
function initializeAdminFeatures() {
    loadAdminDashboard();
    updateSystemHealth();
}

function loadAdminDashboard() {
    animateStats('.admin-interface .stat-number');
}

function updateSystemHealth() {
    // –ò–º–∏—Ç–∞—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
    setTimeout(() => {
        const healthItems = document.querySelectorAll('.health-status');
        healthItems.forEach((item, index) => {
            setTimeout(() => {
                item.style.animation = 'pulse 0.5s ease';
            }, index * 200);
        });
    }, 1000);
}

function openAdminFeature(feature) {
    const featureNames = {
        'users': '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏',
        'content': '–ú–æ–¥–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞',
        'statistics': '–°–∏—Å—Ç–µ–º–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
        'settings': '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã'
    };

    showNotification(`üîß –û—Ç–∫—Ä—ã–≤–∞–µ–º: ${featureNames[feature]}`);

    if (tg) {
        tg.sendData(JSON.stringify({
            action: 'open_admin_feature',
            feature: feature
        }));
    }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Å–∏—Ö–æ–ª–æ–≥–∞
function initializePsychologistFeatures() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏
}

function openConsultation(type) {
    const consultationTypes = {
        'individual': '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
        'group': '–ì—Ä—É–ø–ø–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è',
        'resources': '–ú–∞—Ç–µ—Ä–∏–∞–ª—ã –ø–æ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏',
        'tests': '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —Ç–µ—Å—Ç—ã'
    };

    showNotification(`üß† –û—Ç–∫—Ä—ã–≤–∞–µ–º: ${consultationTypes[type]}`);

    if (tg) {
        tg.sendData(JSON.stringify({
            action: 'open_consultation',
            type: type
        }));
    }
}

function startBreathing() {
    showNotification('ü´Å –ù–∞—á–∏–Ω–∞–µ–º –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ...');

    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –¥—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ
    let breathingPhase = 'inhale';
    let breathingTimer = 0;
    const breathingCycle = 4; // 4 —Å–µ–∫—É–Ω–¥—ã –Ω–∞ –∫–∞–∂–¥—É—é —Ñ–∞–∑—É

    const breathingInterval = setInterval(() => {
        breathingTimer++;

        if (breathingTimer === breathingCycle) {
            breathingPhase = breathingPhase === 'inhale' ? 'exhale' : 'inhale';
            breathingTimer = 0;

            const message = breathingPhase === 'inhale' ? 'ü´Å –í–¥–æ—Ö...' : 'üí® –í—ã–¥–æ—Ö...';
            showNotification(message);
        }

        if (breathingTimer === 0 && breathingPhase === 'inhale') {
            // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø–æ—Å–ª–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ü–∏–∫–ª–æ–≤
            if (Math.random() > 0.7) {
                clearInterval(breathingInterval);
                showNotification('‚ú® –î—ã—Ö–∞—Ç–µ–ª—å–Ω–æ–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
            }
        }
    }, 1000);
}

function playRelaxingMusic() {
    showNotification('üéµ –í–∫–ª—é—á–∞–µ–º —Ä–∞—Å—Å–ª–∞–±–ª—è—é—â—É—é –º—É–∑—ã–∫—É...');
    enableMusic();

    if (backgroundMusic) {
        backgroundMusic.volume = 0.2; // –¢–∏—à–µ –¥–ª—è —Ä–µ–ª–∞–∫—Å–∞—Ü–∏–∏
    }
}

function showMotivation() {
    const motivationalMessages = [
        'üí™ –¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è —Å –ª—é–±—ã–º–∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç—è–º–∏!',
        'üåü –ö–∞–∂–¥—ã–π —à–∞–≥ –ø—Ä–∏–±–ª–∏–∂–∞–µ—Ç –∫ —É—Å–ø–µ—Ö—É!',
        'üéØ –í–µ—Ä—å –≤ —Å–µ–±—è - —Ç—ã —É–∂–µ –Ω–∞ –ø—É—Ç–∏ –∫ –ø–æ–±–µ–¥–µ!',
        'üî• –¢–≤–æ—è —Ü–µ–ª–µ—É—Å—Ç—Ä–µ–º–ª—ë–Ω–Ω–æ—Å—Ç—å - —Ç–≤–æ—è —Å–∏–ª–∞!',
        'üèÜ –í–µ–ª–∏–∫–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ç—Ä–µ–±—É—é—Ç –≤—Ä–µ–º–µ–Ω–∏!'
    ];

    const randomMessage = motivationalMessages[Math.floor(Math.random() * motivationalMessages.length)];
    showNotification(randomMessage);
}

// –£—Ç–∏–ª–∏—Ç—ã –∏ –∞–Ω–∏–º–∞—Ü–∏–∏
function animateProgressStats() {
    setTimeout(() => {
        animateStats('.progress-stats .stat-number');
    }, 500);
}

function animateStats(selector) {
    const numbers = document.querySelectorAll(selector);
    numbers.forEach((numElement, index) => {
        const finalValue = numElement.textContent;
        const isPercentage = finalValue.includes('%');
        const numericValue = parseInt(finalValue.replace(/[^\d]/g, ''));

        if (!isNaN(numericValue)) {
            let currentValue = 0;
            const increment = numericValue / 50;

            numElement.textContent = '0' + (isPercentage ? '%' : '');

            setTimeout(() => {
                const counter = setInterval(() => {
                    currentValue += increment;
                    if (currentValue >= numericValue) {
                        numElement.textContent = finalValue;
                        clearInterval(counter);
                    } else {
                        numElement.textContent = Math.floor(currentValue) + (isPercentage ? '%' : '');
                    }
                }, 30);
            }, index * 200);
        }
    });
}

// –°–∏—Å—Ç–µ–º–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showNotification(message, type = 'success', duration = 3000) {
    const notification = document.getElementById('notification');
    if (!notification) return;

    // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –∫–ª–∞—Å—Å—ã
    notification.className = 'notification';

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å —Ç–∏–ø–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if (type !== 'success') {
        notification.classList.add(type);
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç
    notification.textContent = message;

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    notification.classList.add('show');

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º
    setTimeout(() => {
        notification.classList.remove('show');
    }, duration);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
    if (tg && type === 'success') {
        tg.showAlert(message);
    }
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function closeModal(modalId) {
    const modal = document.getElementById(modalId);
    if (modal) {
        modal.style.display = 'none';
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
document.addEventListener('keydown', function(e) {
    // ESC - –∑–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –∏–ª–∏ –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
    if (e.key === 'Escape') {
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞
        const modals = document.querySelectorAll('.modal[style*="flex"]');
        if (modals.length > 0) {
            modals.forEach(modal => modal.style.display = 'none');
            return;
        }

        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å
        const sidebar = document.getElementById('sidebar');
        if (sidebar && sidebar.classList.contains('active')) {
            toggleSidebar();
            return;
        }

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É —Ä–æ–ª–∏
        if (currentRole) {
            selectRole(null);
        }
    }

    // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è —Ä–æ–ª–µ–π
    if (e.ctrlKey || e.metaKey) {
        switch(e.key) {
            case '1':
                e.preventDefault();
                selectRole('student');
                break;
            case '2':
                e.preventDefault();
                selectRole('teacher');
                break;
            case '3':
                e.preventDefault();
                selectRole('admin');
                break;
            case '4':
                e.preventDefault();
                selectRole('psychologist');
                break;
            case 'm':
                e.preventDefault();
                toggleMusic();
                break;
            case 't':
                e.preventDefault();
                toggleTheme();
                break;
        }
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', function(e) {
    console.error('–û—à–∏–±–∫–∞:', e.error);
    showNotification('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏', 'error');
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Ç–µ—Ä–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
window.addEventListener('offline', function() {
    showNotification('‚ö†Ô∏è –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É', 'warning');
});

window.addEventListener('online', function() {
    showNotification('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
});

// PWA - —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è Service Worker
if ('serviceWorker' in navigator) {
    navigator.serviceWorker.register('/sw.js')
        .then(registration => {
            console.log('Service Worker –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω');
        })
        .catch(error => {
            console.log('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker');
        });
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
window.EGEApp = {
    selectRole,
    toggleTheme,
    toggleMusic,
    showNotification,
    openStudentFeature,
    openTeacherFeature,
    openAdminFeature,
    openConsultation,
    playEruditGame,
    startGame,
    closeModal,
    createQuickTask,
    checkSubmissions,
    startBreathing,
    playRelaxingMusic,
    showMotivation,
    setVolume
};